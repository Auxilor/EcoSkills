buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10"
    }
}

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'maven-publish'
    id 'java'
}

dependencies {
    implementation project(":eco-core").getSubprojects()
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://repo.codemc.org/repository/nms/' }
        maven { url 'https://repo.codemc.io/repository/maven-public/' }
        maven { url 'https://repo.dmulloy2.net/repository/public/' }
        maven { url 'https://repo.essentialsx.net/releases/' }
        maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    }

    jar {
        onlyIf { !sourceSets.main.allSource.files.isEmpty() }
    }

    shadowJar {
        relocate('com.willfp.libreforge', 'com.willfp.ecoskills.libreforge')
        relocate('org.joml', 'com.willfp.ecoskills.libreforge.joml')
    }

    dependencies {
        compileOnly 'com.willfp:eco:6.50.0'
        implementation 'com.willfp:libreforge:3.129.2'
        implementation 'org.joml:joml:1.10.4'
        compileOnly 'me.clip:placeholderapi:2.11.2'
        compileOnly fileTree(dir: '../../lib', include: ['*.jar'])
        compileOnly 'com.github.LegameMc:EnchantGui-API:1.0'

        compileOnly 'org.jetbrains:annotations:23.0.0'
        compileOnly 'org.jetbrains.kotlin:kotlin-stdlib:1.7.10'
    }

    tasks.withType(JavaCompile) {
        options.deprecation = true
        options.encoding = 'UTF-8'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "17"
            freeCompilerArgs += ["-Xjvm-default=all"]
        }
    }

    processResources {
        filesMatching(["**plugin.yml"]) {
            expand projectVersion: project.version
        }
    }

    java.sourceCompatibility = JavaVersion.VERSION_17
    java.targetCompatibility = JavaVersion.VERSION_17

    compileJava.options.encoding = 'UTF-8'
    compileJava.dependsOn clean

    build.dependsOn shadowJar
}

tasks.withType(Jar) {
    destinationDirectory = file("$rootDir/bin/")
}

clean.doLast {
    file("${rootDir}/bin").deleteDir()
}

shadowJar {
    archiveFileName = findProperty("plugin-name") + " v" + findProperty("version") + ".jar"
}

jar {
    archiveFileName = findProperty("plugin-name") + " v" + findProperty("version") + " " + "unshaded" + ".jar"
}

group = 'com.willfp'
archivesBaseName = project.name
version = findProperty("version")

compileJava.options.encoding = 'UTF-8'

build.dependsOn shadowJar

task buyThePlugins {
    dependsOn subprojects.build

    doLast {
        println 'If you like the plugin, please consider buying it on Spigot or Polymart!'
        println 'Spigot: https://www.spigotmc.org/resources/authors/auxilor.507394/'
        println 'Polymart: https://polymart.org/user/auxilor.1107/'
        println 'Buying gives you access to support and the plugin auto-updater, and it allows me to keep developing plugins.'
    }
}
build.finalizedBy buyThePlugins
