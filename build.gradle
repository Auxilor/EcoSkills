buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.31"
    }
}

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'maven-publish'
    id 'java'
}

dependencies {
    implementation project(":eco-core").getSubprojects()
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://repo.codemc.org/repository/nms/' }
        maven { url 'https://repo.codemc.io/repository/maven-public/' }
        maven { url 'https://repo.dmulloy2.net/repository/public/' }
        maven { url 'https://repo.essentialsx.net/releases/' }
    }

    jar {
        onlyIf { !sourceSets.main.allSource.files.isEmpty() }
    }

    dependencies {
        compileOnly 'com.willfp:eco:6.12.1'
        compileOnly 'com.github.loneDev6:API-ItemsAdder:2.4.21'
        compileOnly fileTree(dir: '../../lib', include: ['*.jar'])


        compileOnly 'org.jetbrains:annotations:19.0.0'
        compileOnly 'org.jetbrains.kotlin:kotlin-stdlib:1.5.21'
    }

    tasks.withType(JavaCompile) {
        options.deprecation = true
        options.encoding = 'UTF-8'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "16"
        }
    }

    processResources {
        filesNotMatching(["**/*.png", "**/models/**", "**/textures/**"]) {
            expand projectVersion: project.version
        }
    }

    compileJava.options.encoding = 'UTF-8'
    compileJava.dependsOn clean

    build.dependsOn shadowJar
}

tasks.withType(Jar) {
    destinationDirectory = file("$rootDir/bin/")
}

clean.doLast {
    file("${rootDir}/bin").deleteDir()
}

shadowJar {
    archiveFileName = findProperty("plugin-name") + " v" + findProperty("version") + ".jar"
}

jar {
    archiveFileName = findProperty("plugin-name") + " v" + findProperty("version") + " " + "unshaded" + ".jar"
}

group = 'com.willfp'
archivesBaseName = project.name
version = findProperty("version")
java.sourceCompatibility = JavaVersion.VERSION_16

compileJava.options.encoding = 'UTF-8'

build.dependsOn shadowJar